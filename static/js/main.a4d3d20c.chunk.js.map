{"version":3,"sources":["components/diceResults.jsx","components/diceGame.jsx","App.js","index.js"],"names":["DiceResults","array","map","roll","index","rollClass","props","winner","toString","key","className","showWinner","this","renderRolls","rolls","React","Component","DiceGame","state","totals","1","2","3","4","5","6","diceDisabled","rollAll","bind","rollDone","clearGame","obj","Object","keys","find","setState","reactDice","num","setRolls","setWinner","stateCopy","assign","push","checkWinner","numDice","outline","outlineColor","faceColor","dotColor","dieSize","rollTime","disableIndividual","ref","dice","type","onClick","disabled","App","ReactDOM","render","document","getElementById"],"mappings":"uRAqCeA,E,oLAjCDC,GAAQ,IAAD,OAOjB,OAAOA,EAAMC,KAAK,SAACC,EAAMC,GACvB,IAAIC,EAAa,EAAKC,MAAMC,QAAU,EAAKD,MAAMC,SAAWJ,EAAKK,WAAjD,eAAuEL,EAAvE,0BAA+FA,GAE/G,OACE,uBAAGM,IAAKL,EAAOM,UAAWL,GAAYF,Q,+BAM1C,IAAMQ,EAAaC,KAAKN,MAAMC,OAAS,aAAe,aACtD,OACE,yBAAKG,UAAU,qBACb,yBAAKA,UAAU,mBACb,6BAAK,8CACL,6BAAME,KAAKC,YAAYD,KAAKN,MAAMQ,SAEpC,yBAAKJ,UAAS,2BAAsBC,IAClC,sCACA,2BAAIC,KAAKN,MAAMC,c,GA3BCQ,IAAMC,WCkJjBC,G,kBA/Ib,WAAYX,GAAQ,IAAD,8BACjB,4CAAMA,KACDY,MAAQ,CACXC,OAAQ,CACNC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,GAELtB,KAAM,KACNW,MAAO,GACPP,OAAQ,KACRmB,cAAc,GAEhB,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAKE,UAAY,EAAKA,UAAUF,KAAf,gBAlBA,E,yEAqBPG,GAOV,OAAOC,OAAOC,KAAKF,GAAKG,MAAK,SAAAzB,GAAG,OAAiB,IAAbsB,EAAItB,Q,kCAQxCG,KAAKuB,SAAS,CACZhB,OAAQ,CACNC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,GAELtB,KAAM,KACNW,MAAO,GACPP,OAAQ,KACRmB,cAAc,M,gCAShBd,KAAKwB,UAAUT,Y,+BAERU,GAQPzB,KAAK0B,SAASD,GACdzB,KAAK2B,c,+BAEEF,GAOP,IAAMG,EAAYR,OAAOS,OAAO,GAAI7B,KAAKM,OAEzCsB,EAAUrB,OAAOkB,IAAQ,EACzBG,EAAUrC,KAAOkC,EACjBG,EAAU1B,MAAM4B,KAAKL,GAErBzB,KAAKuB,SAASK,K,kCAQd,IAAMjC,EAASK,KAAK+B,YAAY/B,KAAKM,MAAMC,QAEvCZ,GACFK,KAAKuB,SAAS,CACZ5B,OAAQA,EACRmB,cAAc,M,+BAKV,IAAD,OACDA,EAAed,KAAKM,MAAMQ,aAAe,WAAa,SAC5D,OACE,yBAAKhB,UAAU,kBACb,yBAAKA,UAAU,mBACb,+EAEF,yBAAKA,UAAU,mBACf,yBAAKA,UAAS,yBAAoBgB,IAChC,kBAAC,IAAD,CACEkB,QAAS,EACTC,SAAS,EACTC,aAAc,OACdC,UAAW,OACXC,SAAU,OACVC,QAAS,MACTC,SAAU,EACVC,kBAAmBvC,KAAKM,MAAMQ,aAC9BG,SAAUjB,KAAKiB,SACfuB,IAAK,SAAAC,GAAI,OAAI,EAAKjB,UAAYiB,MAGlC,yBAAK3C,UAAU,qBACb,4BACEA,UAAU,YACV4C,KAAK,SACLC,QAAS3C,KAAKe,QACd6B,SAAU5C,KAAKM,MAAMQ,cAJvB,aAKA,4BACEhB,UAAU,WAAU4C,KAAK,SACzBC,QAAS3C,KAAKkB,WAFhB,gBAKF,kBAAC,EAAD,CACIX,OAAQP,KAAKM,MAAMC,OACnBL,MAAOF,KAAKM,MAAMJ,MAClBP,OAAQK,KAAKM,MAAMX,c,GA1IRQ,IAAMC,YCSdyC,MATf,WACE,OACE,6BACE,+CACA,kBAAC,EAAD,QCLNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,gB","file":"static/js/main.a4d3d20c.chunk.js","sourcesContent":["import React from 'react';\n\n\nclass DiceResults extends React.Component {\n  renderRolls(array) {\n    /**\n    * Renders all of the individual rolls from an array\n    * @param {array} \n    * @return {jsx elements}\n    */ \n\n    return array.map( (roll, index) => {\n      let rollClass = (this.props.winner && this.props.winner === roll.toString()) ? `roll-${roll} winner` : `roll-${roll}`;\n      \n      return (\n        <p key={index} className={rollClass}>{roll}</p>\n      )\n    })\n  }\n\n  render() {\n    const showWinner = this.props.winner ? 'showWinner' : 'hideWinner';\n    return(\n      <div className=\"results-container\">\n        <div className=\"rolls-container\">\n          <div><span>Your Rolls:</span></div>\n          <div>{this.renderRolls(this.props.rolls)}</div>\n        </div>\n        <div className={`winner-container ${showWinner}`}>\n          <p>Winner!</p>\n          <p>{this.props.winner}</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DiceResults;\n","import React from 'react';\nimport ReactDice from 'react-dice-complete';\nimport DiceResults from './diceResults';\nimport 'react-dice-complete/dist/react-dice-complete.css';\n\nclass DiceGame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totals: {\n        1: 0,\n        2: 0,\n        3: 0,\n        4: 0,\n        5: 0,\n        6: 0\n      },\n      roll: null,\n      rolls: [],\n      winner: null,\n      diceDisabled: false\n    }\n    this.rollAll = this.rollAll.bind(this);\n    this.rollDone = this.rollDone.bind(this);\n    this.clearGame = this.clearGame.bind(this);\n  }\n\n  checkWinner(obj) {\n    /**\n    * Checks if winner exists\n    * @param {obj} \n    * @return {bool} \n    */ \n\n    return Object.keys(obj).find(key => obj[key] === 5);\n  }\n  clearGame() {\n    /**\n    * Clears game by resetting state\n    * @return {function} setState();\n    */ \n\n    this.setState({\n      totals: {\n        1: 0,\n        2: 0,\n        3: 0,\n        4: 0,\n        5: 0,\n        6: 0\n      },\n      roll: null,\n      rolls: [],\n      winner: null,\n      diceDisabled: false\n    });\n  }\n  rollAll() {\n    /**\n    * ReactDice callback to roll dice\n    * @return {function} reactDice.rollAll()\n    */ \n\n    this.reactDice.rollAll()\n  }\n  rollDone(num) {\n    /**\n    * Parent callback function that kicks off results\n    * @param {num} num \n    * @return {function} setRolls();\n    * @return {function} setWinner();\n    */ \n\n    this.setRolls(num);\n    this.setWinner();\n  }\n  setRolls(num) {\n    /**\n    * Sets updated state from roll\n    * @param {num} \n    * @return {function} setState()\n    */\n\n    const stateCopy = Object.assign({}, this.state);\n\n    stateCopy.totals[num] += 1;\n    stateCopy.roll = num;\n    stateCopy.rolls.push(num);\n\n    this.setState(stateCopy);\n  }\n  setWinner() {\n    /**\n    * Sets winner state if winner exists\n    * @return {function} setWinner();\n    */ \n\n    const winner = this.checkWinner(this.state.totals);\n\n    if (winner) {\n      this.setState({ \n        winner: winner,\n        diceDisabled: true\n      })\n    }\n  }\n\n  render() {\n    const diceDisabled = this.state.diceDisabled ? \"disabled\" : \"active\";\n    return (\n      <div className=\"game-container\">\n        <div className=\"title-container\">\n          <p>Roll the dice 5 times in a row to get a winner!</p>\n        </div>\n        <div className=\"board-container\">\n        <div className={`dice-container ${diceDisabled}`}>\n          <ReactDice\n            numDice={1}\n            outline={true}\n            outlineColor={\"#000\"}\n            faceColor={\"#fff\"}\n            dotColor={\"#000\"}\n            dieSize={\"100\"}\n            rollTime={1}\n            disableIndividual={this.state.diceDisabled}\n            rollDone={this.rollDone}\n            ref={dice => this.reactDice = dice}\n          />\n        </div>\n        <div className=\"buttons-container\">\n          <button \n            className=\"btn-green\" \n            type=\"button\"\n            onClick={this.rollAll}\n            disabled={this.state.diceDisabled}>Roll Dice</button>\n          <button \n            className=\"btn-blue\"type=\"button\"\n            onClick={this.clearGame}>Clear Game</button>\n        </div>\n        </div>   \n        <DiceResults \n            totals={this.state.totals} \n            rolls={this.state.rolls} \n            winner={this.state.winner} />\n      </div>\n    )\n  }\n}\n\nexport default DiceGame;\n","import React from 'react';\nimport './App.scss';\nimport DiceGame from './components/diceGame';\n\n\nfunction App() {\n  return (\n    <div>\n      <h1>Tom's Dice Game</h1>\n      <DiceGame />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('dice-game'));\n"],"sourceRoot":""}